# Use version 3 of the docker-compose file format
version: '3'

# Define services that make up the application
services:

  # The web service, which runs the Django application
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - 1337:8000
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis_hostname # NEW

  # The celery service, which runs asynchronous tasks using Celery and Redis as a broker and backend respectively 
  celery:
    build: .
    command: celery -A search_crawl_teach worker -l info --pool=solo
    volumes:
      - .:/usr/src/app/
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis_hostname
      - web

  # # The flower service, which provides an interface for monitoring Celery tasks  
  # flower:
  #   image: mher/flower # Use Flower Docker image from Docker Hub  
  #   command: --port=5555 --broker=redis://redis_hostname/0 # Run Flower on port 5555 with Redis as broker  

  redis_hostname:
    image: redis:latest
    volumes:
      - data:/data
    ports:
      - 6379:6379

  db_hostname:
    # Postgres database used by Django app 
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    ports:
      - 9000:9000 # expose ports - HOST:CONTAINER
    restart: unless-stopped

volumes:
  data:
